const appIndex = 717905129

const vaultHDL = 4504000000000

const Algo = [
  445568169, 445569260, 445569822, 445570411, 445570786, 445571285, 445572039, 445572743, 445573215, 445573651, 456423620, 456427511, 456429650, 456433554, 456435444, 456437565, 456439368, 456442371, 456443779, 456445171, 464197360, 464199118, 464199727, 464201018, 464202221, 464203124, 464204475, 464205610, 464207071, 464208589, 471982576, 471985014, 471987722, 473640503, 473643846, 473651057, 473658580, 473662757, 473668209, 473670914, 475613252, 475616130, 502471248, 502482524, 502490896, 502500073, 502509832, 502519115, 502541437, 502547154, 502553013, 502565760, 535128334, 535131839, 535133901, 535135771, 535137022, 535138614, 535139911, 535141396, 535143622, 535146138, 535152278, 535153562, 535157068, 535159731, 535162328, 535166309, 535169211, 535171934, 548015593, 548021097, 548024499, 548027410, 548032469, 548035199, 548041256, 548043749, 548045811, 548049287, 562258753, 562262432, 562279027, 562281887, 562283416, 562285222, 562286403, 562287703, 562289261, 562303480, 576840281, 576842383, 576844469, 576845790, 576848239, 576849429, 576850733, 576851713, 576853720, 576855269, 576857743, 576901842, 576904558, 576907747, 576946341, 581655761, 581670373, 581692142, 590570900, 590573411, 590575876, 590577474, 590578448, 590582111, 590584673, 590588467, 590590669, 590593249, 590595760, 590597920, 602055153, 602056409, 602062616, 602063994, 602066749, 602071286, 602075976, 602078503, 602081786, 602084343, 617448328, 617451493, 617453998, 617455868, 617459983, 617461914, 617465035, 617467071, 617469488, 617471806, 627078180, 631830864, 631834345, 631842236, 631845133, 631850526, 631982203, 631985348, 631986890, 634067128, 644724417, 644730558, 644732553, 644750318, 644753223, 644756229, 644759682, 644762471, 644765555, 644854218, 656141452, 656145216, 656147132, 656150675, 656154698, 656158725, 656160252, 656161656, 656163459, 656165674, 667534630, 667536751, 667538327, 667541036, 667544181, 667545944, 667548197, 667550196, 667552276, 667554501, 678861343, 678864696, 678873889, 678880527, 678883237, 678885488, 678891698, 678893929, 678902468, 678904499, 689685777, 689688394, 689690579, 689692259, 689694233, 689696980, 689698438, 689701122, 689702543, 689703750, 698405085, 698407174, 698408667, 698409885, 698410921, 698412421, 698413879, 698415742, 698418991, 698420576, 707719319, 707723542, 707724084, 707726461, 707727225, 707728082, 707731119, 707731776, 707732469, 708106509, 713883314, 713884523, 713885860, 713886614, 713887625, 713889017, 713889842, 713890577, 713891244, 713891700, 531411274
]

const Forum = [
  699978601,
  699556702,
  645137849,
  645134879,
  645131807,
  591694299,
  591692876,
  535631028,
  535627807
]

const asas = {
  vHDL: 712922982,
  realHDL: 137594422,
  AlgoAstro: Algo,
  ForumAstro: Forum,
  PlatAstro: 673621287,
  tinyHDLALGO: 552706313,
  algoFiHDLALGO: 607696609
}

const txnAddresses = [
  "55TOUZSM6AOK7PCUT7O5SWYSNUDDGTOEGQQBKZPX32I6RPAAW4KUSI56C4",
  "LZKMYXO5T7FZ4ZOP4RCPHDVC6R56L5WU66ZUN43FCB4IYC7E6ZB7FB4K2U",
  "DBGIKXZ3UDB2A4AGENL5ZQYCE2L7BDSN2ENDEVMJ6PGY22HGQKDZDZKLOI",
  "QESID75QN3U3VWWHDDNOFJLTQETBB32LYMVNXMZF7P5CGYJOVIM2PVSJRU",
  "FQBL4R6ET3AE6MLF2PYKXYAU4NEYLRCCH57TIODB3RUSJNSO7CG4BTVHQ4",
  "TNYWXRP2VQRK5RZZSTRC52H7OR2SJP6AZZ35YP5UZTGNHWU45ZPDMWP52E",
  "HOQVXL4JONWZL2BEDYVYPGC73Z2EHA4ZUYOJISQN27E7NTKJERZUUXGO7Q",
  "CUZ3YUAO5DODSTQCI6XBLX4J5OF7UOPZ2YSK2FGDSFXRXDSTQWW4N5OOTM",
  "26ML7HVNGODI7UOLDH7SOULH6KA6NYXK7LNE7EDIV6ZP3HWY4RAQVB235Y",
  "PTL3W7VCUL6EL7CNWLYUQ7HETO5MP7V3EVVD4SB7BPJY3RYNZK3MSKBWGM",
  "UY35RCTQXPFCDBSDLMG7LDQHQQQKZO6UGYWXTN2RUUKMZD64FPLGP764MA",
  "TSSX7LMB7JV2A3JHPHYGKJHHIKX6VVWDM7FCB3LNVIBJUTWGLCXDC5KLTM",
  "BSFDDA6MR4KYCRZZJPI6MRGB4GJNFWEX4DR2JTAURWQUTR4VVLN5QSTDLQ",
  "GBHYSI3JCUAY7BP33QVKJMN473C7LCYQ3BOJZ37LIZZWN54H2HP4FI5F5I",
  "BRJMELBWN3MN42LPTOBEE3SRDGJQG67FVUTF3IY2IK6VEBESBLVU2UWHNE",
  "3HI5YSOHUVEFNR2DKLM34P64X6BCQMPJMCR6VKUFTQBCIXZCHYLC7MXYXI",
  "YGVNABD73CNLEPVWRYXOWAQ5Q3T2GMQ5DV7KDBWFF6LPESKLI63CVOVOG4",
  "MUHSWEKB2E5YNKJJ7ZB7OXLV7G7H5ZACU6PAREWJIE77M36MIQHSKOCSPY",
  "KSEPV4R62GIUHJD6342M7NHOS5UPIKWMQYUWMCZG2XVYKW76WU365D66OQ",
  "BJ2NE4FSR5JLKHHD6XBZYKUN7FXMWS3BQ3QODI7LZQPOWBJKSEZ3KNP4FM",
  "MAQEY73NOLSIT3MMDJP5PZJP4E5QJ5YMI7XU6XOITRVP6NJPRCHYJJ4BXM",
  "A444W7MWKLDYTDLG5HNVWZN6W5VUMZIF5BGAOXCPQDN62NTAR35WCJYTAM",
  "JOJMS5BBQ7ZN6Y4XIBR2DD6IBPHE5BM7L5FUXI74QRN2ATAIYRRGBMFR3Y",
  "BFNIELBSFBDFPDKZZEMFNG4MVXADO2I5BMYTFAZ277QWZOU72LJQITV4ME",
  "X5YOLKV3BDMXETUMSA27D5WUBMTEXPFQQYF42NB6J5YT3W7FZ76FG26HQU",
  "IZMVOAAIPFIG5CKK55HJ3OTW7K26S6ITHAQCJBSWLBOCTQ4ZL5PEICEECA",
  "DCZFPTWUVNTROFMIYKGPRWDIXCYVZGCNG67MPU2NGGI3GBRKQ4EJC5IYPA",
  "NFWNWQ3LTPR7B22MDLWWEDO4I4OVTYKIE6XBYYIOXVWSEHY2FICM322FZA",
  "X3W5XFG47ZQVUMLMPYFPFTQ4UO76CVF3TMRLUO6RDF2O6PYJPNUVLQTFRY",
  "25IY7VCF5ED2IFOZLVPBGKWPAQBDIAJ2AJKKSMYZWCR5YFYZJDJEMSEFUA",
  "TE4B3TICT26PSZP7FGEOHN6OQMW24C3FCF4JXJJA5YGEP5LMT6XFHBL5UE",
  "A5LYQ3NBRXJRBYTMCNSNLN2COTJYSYQ3SAYJUR7LDVUMUDR2CVBWZ5GHEA",
  "XSIGK7ZB62ESKJQB4LOBWYCOFAMCRNE2VBANDVESQ4RAVCTMVZIZSIIVSE",
  "3IR6NVDEYX34VPLY3PXBR6BLGLI3CGBXFVJRCSLVRYJE6JPD7I4LVPX6XE",
  "FQ3K7SRUUNCVQV2NJJWEKR3QGQ4VA2JSW4K6WPVTWDDIML2BY3S3JJ57IY",
  "J5MT34Y4WZCGSUO3NF5DUPAXYKEH5L5IKB254LFK6Q74VBCLBVKCXJRQZA",
  "EGOG2K65ZS6FBNUQIG5UE7OFJQZSQW3SOEO2JKGRTQRRSPSTMECITQ2LTE",
  "M6YGYW3TG5JYFPNWQHYXVHZ6YQJ3RWAWOVOYHIEZUWDDLZSRGGGWKODUHA",
  "GOSHZU5LGCNWRQJS65BYLQJGN5MSQFMMCSF223KBVQDTA5MFL5LGTEV3P4",
  "PKM5KFWYBLM53UX4C6L5OMTUBCZYEAY5P3LB4UFQJCFLTP2QACAAUK6TGI",
  "B627Q7GDXYFE5DFYPNABW3BWO2KYRJGXISM4DSUGOEUHQVLODRLR3ST6ZI",
  "BYDHQNBDFYHTZQ5SCHODI2CNHQC7PYKQVEZH4NY4MFW4FVSOTDSLDUMAEA",
  "2ZGLZYQ4VUWOMBZHKAQHOUXL5JPAQ3NR53OXGDESVDFBWVAS2BE53CO4SI",
  "UA7PZLV2GXPUBZPHVADVN6GZL2VNSAOFDQG37ABNNWI76HVQAIA6VS2PP4",
  "SRHUNXWUCVJQG32SQJJQT2OUINAXECSETZBLLEDAEJKMAWJ5S23AWUW6GY",
  "3BGPETOZCP6K7Y6U35KUW2STUSA5MY2BC7N4WPNDTVRVO72RFNUDS3UQFE",
  "NJUQGTRDILEX7DIK6WUZ373DN3QKOZCTN6YWNHYRZTOG5NBHMCTXVGRVTY",
  "5YXGBPCL663I4TIR2QGN2UCZ7S343AAWK4KVOXSEVSEZQ3DKTPF7RUCMHM",
  "SW7MEU6EZV2L7OR6K4HEMYUWATY36EFZMXMTLPJ4GHFRPOFDXIJU6JTJ2U",
  "K5X4O6MOJCKHCGQ4URWKIETTQFIDBX27WZX2XVQRCBLP44PWEKTICDZQQ4",
  "5UH6NMY33UUZ7JRI7F72ONXYNBL3WSZBMICGK3HGOORMI6LGXI42R6D52Y",
  "LBJN42CSXSC52YLBDQJFK4NZQD5FVCBCE5ILW7WCA55XFBJF54AV3URWR4",
  "5EIOD3E6FZT337OB5A7TD6WKXHCNWMFD5ENKAKULE4F3GPSCZFBPCUJ6YY",
  "JVRLBHFJBGG54KZ7AEF23TAAHCJKABMDPUYBL4NGGQXJEJTWUQHZZFBOVQ",
  "YEXPMKRK6UBGY4BQ7LQGEOPQX7NXSE3HCMU5RSYK5BD2ZXZ4SA4ILT6SOE",
  "QW257JSOIZS52ZE74FTQYBUPWE66IWGT2V7RME7DPKO7ZMGFGT6PZYKL4M",
  "OIFNFB6NAKW3K5JF7ONVKIY27Y4UVGSWBTMCEB6ODNCWEZ6HAKXBTZA7PE",
  "VSJAUOAQTHPOURGUMHBEMCQ33EYJSC4Z5VQ545PU3IDMUMQHJ7VAWEH7H4",
  "5FXD4Y5RZHEP3YL7FS5S34OPILAM325YSWTIK72TTGHI2LQETIVQVK7L4M",
  "E7SSJ4NL7BP2HXCKQLOSNBN5DB4XADMR6AWMPIGBSHWNVD5J2EZJP75QVQ",
  "4K52JXMBN7YOEWWMCXQEMUID3ZX44Q5BUSXBJAZ3QXDZK2CRWQHJQFLXKA",
  "REEUBKRAG7GNWA73LXZYL3HB2Y6DIYNMG3V35GH3N5CANPEQEM6BWQV5EA",
  "PR6SFSBHTARZV5A4PCAPARF367GP5QXL6XWLLU6JKVVZPMNONNUIK2NVQI",
  "735Y5XFMLMHQJUWQBVDBV3BQH4QWXVNMR3GM2CFPROWF6NUYCJE73TBAWI",
  "J4FJYB5SDE4NGVIW7EKXZ7ULUU7ER3XAFG5JYEXIVVOQDYPHB36M4WDOD4",
  "VVVB3XGJRK4IOPTN46D2WUDUKYXYIRHSFN7YGL4EQ3OMDFWSXWVORC3B24",
  "JYNYGUEXLVEQEQLHMP6ZLOIXX67QLNKKQ3OJ4CD2DDNFFNKAVYAS37VCGU",
  "BXRZKSUMDGWKJQCHACPQ3KWLZ4K34JWRVRS652CVVRW57MI4FHSBX4UOYU",
  "2TZBP3DACOBMQBFRBOZEPZIW3JLNCS3D7TDBSJGYLWSIOV5TEL5H6COJHU",
  "JAA2GROYOPER46BDVMER2OQXFMYGQJ6OM4KFFALTEQGSGUGT5KW2HK5Q7I",
  "KEAG2ICE22ROPEQMJZFJ4TSHMKIF4U3DA7NTW6XXXQM2HGLZFGN6KB5EEI",
  "IDFLIOEKKLTFNVQPSUPMLFQFNJ5GM4LNDNNBDWDZNJIL5KA7K6F67QO7YI",
  "DR4U4FGXHZD3MNWT7L6AR6YJC3G3LQAZJNVLERKEXXFFS5OJSKB3VW6Y2A",
  "5IDCMP54CHZP3E5VG5GJTVWHHTA5CVANRZCPGM7FK6LV3IINL56SFVG2RQ",
  "P7OK63DQ6XMJUQLPLWSHOIFJELIFTSXDXNBACGFOELAPEBZDSYD25CBCEY",
  "Y7PJQ2PYH3P3WHHDQCKJ2PNTSTWWE3PBFIAQXQ4DWOROW7EWXHGJLOJ5FU",
  "FQJOARKZIELTFIN4MN4WJAYITY2QVY7M4DN2DCRB3ZEX6HENV5WKNI5J7I",
  "HRJT5NDYYC26WAR5ZBUNWVOFE5L4NOXDT4ND7UOUNMUEAMHTPABKQGZKP4",
  "CG7YITBGGD75Z7YU7BNX4OZCJFMASDJ4QV3TOIGTPVXRQXYQB47KWMGC4M",
  "GQ6FU2MDHEO5WR36KT347GLDPXUU2ZOTOTAXJ54NTEKJUVMADTORF5KJPQ",
  "GYXVPGUHWJ3L2TTQAWKYK5IOLSZHPVYDIVJDTDSIM5KPDC4XRR5BBQ42Z4",
  "KGWDKS7PJLKHXVCHQSBHSSGNX4U6ARVZHP4ERYMAVR6TIC7CRGVCRNLUVQ",
  "TKVFNOQL7LWYATBHK3USNYNYKKZWTV44OJ6WV6O6ZOUGDDNKIIELXHDHEY",
  "M45E26N2QXPSB4NMY2RE4Y2C7KVDIMKPWJENU6AR2QULK7EIZSM7NVM2DM",
  "OAZPEJTOY7YD6XNHTIVVEWO3FCC3C5DUUM6UZLSUXCSSYOONIBUKAN53XE",
  "IRNCSQBFJXIOJZAGZFSHEJEAF4346E7NGHIMMSZZJ64QDAHEND6QHPOXYU",
  "YGU7MXLAQMMAQIKP4SYOU6THDW77N5NBZSTD3PZUDXPZ3DB6OGKCOLBE2U",
  "RX5BVYX4RUNMYKYDPERWIP3GUXQNIDPUJZ64ITBYUILZWQGIPCDTDCH2WY",
  "NG5WLERWYZCG4KTRIWCJL2IAEXTNAGU4IL5QSCLOQYT2TD7PX376G45P7M",
  "HXB6AKQUUTNBIG3MINJZXJ7SRTVGYJJXKF3UD4AFYMPVUQJ6J4QVSMWCNM",
  "KI4SE23EYIKSGOJ5QDKPNLJKHROT37OYH4S4RK5LPEJZWCAE53JXRRSX4E",
  "CETGRJBARFQPG44OCNSICG7ZJEA7NK3B3373V4XLZLOPPWPHGI7XV6WXKY",
  "BRE25XAA55MBFGQDAHDQHEX4H4RIV3S5SESU7Q3KBJ2PHKJFROKXYYBFRA",
  "G7GNME75LPE2A3QTR4V4XPV736423Q5Q6QOBZ4FNX7WEMDCXTCPA5M4G4Y",
  "DZIWKY5XCSEEKXX7Z7GA4YDMCCTU5HJWVNTFCGVKG3M5HQLN5GZRD2ES2Y",
  "EP4XPYASCMH5DYK5TBXS4BDPKU5T32DEYIUL3H4BLXE57I2BLRAXJ2EXZY",
  "AKL6FXX6X2XPMZUYIVLGOW2BCZLVG6PYIPBQMHV3MZCSVIYRKENIZD6OHQ",
  "XZQYEHJCKIGCLPJOBIFAEJCIT7EAWKNCL6RWNBKXYKYSJKA7XLEPUKY3BE",
  "RBLQ4SSLUVUEVNI5I4VQRCIZR73B35N4S53GQGETHOO2RLRMQOSMOPUPQ4",
  "DOJTPAKAHQWKCCWZGTMTHCY5NWNI3XZBKLQF23IYBQARTG2SQNLNGUX63U",
  "XETA4ST7SFDM2FG54Q3446J4EYX4XKRHANIJ57BQXYEN6M7MLBVTXHJ6OE",
  "2NTJTQHRAEEWHCW6CE56OPZGITYQ3ZIGVBMSQ5BBDDMLN5R6BECKLKZVBY",
  "JFAHXQ4EIODI55S2XHY4DQRXAXN4FQ3SLBLOJ3KIGJNP25QHOEGVTLINQM",
  "IG5OJIEF3MYPW4CK36H2I3TNY4ZRI2RGXZ5YTXVZ2F3XBWBYV66GMQJS4M",
  "MJ52JV7YA7UWSRSFQL3ZXMVLVQTQKLP6OWFVQJUSSFVLT7AXFSV2KVV3C4",
  "ADPUX2QVC4M7KRHWV7A2LIMNCHMCUCZHIUWGU2I6MTATJXVJZ4AAFBXSWY",
  "EKJX2SC4U2KMCP5VW7SX4J4CW3ND2AWCPVAOU2P2AVED65PT263ZPB3LUY",
  "YWJVHRZ77GKSLV4QV52VZUKKFHCBVXOBSOUVOW2QOO4MP5HQNWUTBZYRXM",
  "FWOQPLQ3KF5R7MUUNWYJSAE7TZA3HHNXHKXDM2OAWR4RXQT2WXDTLL6RV4",
  "2YNMNHBUF7ZMT4RULXMY2U7WJYBYKCMX4NM2S6OBQBPVB42BWSXYXMQ7OU",
  "VAULTLTTHT75MMDLAQMB4CCLYGKHL7PUI3RD7HHSYWZRY4PS7TJF5A36OY",
  "JFKOXZAQ2QK2FTHG3RBK3OAQFGITKIYKTYGLHQTBPVMAF6ZSLJX5SAMJWY",
  "EOOKL4BROVMUYURELSVWCJZMVQH6ZLQ5TK3IPX4N5RSCR2OPITOEWMGOVE",
  "G6YS5XGNVYHRX57QGDKJNNWOP6L7PXCF6ZR6BMC6WSZVPZDR2JPYFJAAXY",
  "P6UXRZFCJSZGAZDIT6XSEMNKO5RY35IVYCVKJCYZ7ZLZVOS5JT4K7KAN7Q",
  "HLUHD6V3CDMAPKPKY34ML3BQUZ4IPSKLCCAJIP26FBPCW5AJMFS554UAVE",
  "KXJTIEHRMMKRD72PYDBVKV36KI6LZEY6GVV2WVISQMA7LLUUBLB65XJBII",
  "NO6SMNHEH3CNKWNSKHCDPGFKOKTM7MOK2DJ3XVANT6KOPUDXWAA2YSMDM4",
  "2PGVAH4MJRLYVMZDVW4SCLYIUSOOZXSXKSZG2NZ3I36N5PJI7KFDWKSKCY",
  "FADVNTGXAYEO57IIGPILPQK2RJN64D2MIUWS45R4NWBXAXJOBFZBYCZAAI",
  "HGTJSHL7IFKARMKRABBOWIXYHSSNPHBKAGMX7VEL6LPN4JPIHLUD337N74",
  "HONWHW5HPJMTOVM7VC4UAQ7YTSEBTMOAGAGVXLEE726C3QYCKLWGXQG72A",
  "IRQ2ANVMYREJ5YIAJB2CU2SH62WXTSNIBDQ4Z47F5DEEQUUCPKXXDDPQIM",
  "LQSXZHE5Z5ZY5QJGIN453DF4VYEEHOISEBEJ7UIBY3SGKEHDKDHXNMELA4",
  "E5L646BQCSBVHZQ7KOVBFOQY7HTRBACI4B5ZK5C4IRYUSPVWRNYKLRJSTQ",
  "PKDPRMXEHQ764RCZBTS3ECADY4J6X5ENMZ7NX5WD7MZSZIZYVASGCOMIQU",
  "BEOUCJYWQYS263JY7LCZEANP2DEG3SZAJLM36SDTAVLJ2Q7JLUGMSMJEFU",
  "PE76D754IUVDXCNOJKGMDF24SVIWF2JTPYI2PZOMV3AYPWBBZOR3QYOOBY",
  "EVILLAUGHQNACOFE6D7CSOEEMKBB7ZXJZSUBA2NVU4KP5UXENP42QYKO2I",
  "62I5IN75F763NRMW6SBRSVOCROUUY7YCROASBOFV5RIYRZSJSRRDHWJ6EY",
  "N3GU32EUI4ZQSHBAMZHT5HGGWQUHJOH3J7MJYOHI3FWBFFDYRVRDYXQJSQ",
  "TX65HPDLGULAYGNC6534GO257UTEYFKO427NQBV4Q6J44VYZNIN7VI36UE",
  "4LDOWI4VCF3NX7DR7AEKGT4BAWJVWFR4VYDXOALEFT5RAZIUT5T4G6ZNSY",
  "3YR7S3ODJDBIO7FJZRL7F7EFU6BDRKYYQ54JKRBUMRTXSUK7CLFRBB2TTI",
  "EOTQXFQ2OXYM562OEF73XE5MV7R2NJFXQZ5TGA5UWDMMDEWKE5ANYRJPNA",
  "BHJOWNB55AQOZZ6R3C3JYTJZM44WEK3ZVCSJP4XPV4CGBNAQR5TDYGVP7Q",
  "ZOYIIXITZT4WZKJV57HHM3PZ7VHMTWJANUV6ZFFRMT3NDWKYKXS3Q25QN4",
  "F2NIEXEJG5R3RGNI6O5NOAON22DJ5UEPFXDPUA3TU6US2NYODJT65FPEIQ",
  "HSF36HFO6GWZZQEZWBKPHZZ2T72YTRCR7NEGLDQQQIAAA23HMPEAWP5MYE",
  "VD33YCZ2AMRRQFJ6AVUZJA5G2NAY2HPETZ326AFYZJZEDYSEOX4EGXFHYE",
  "OBEVIGEZTEFNULMAODD2XQ766D6DL664LI2SAWGP3DBP2LTRP7MEDUTGHQ",
  "RJK2HID4U5K22JQZNBBDQZCOA5YDXXGRF2ZNYCBWO7GZL5XMBKRABOPF6U",
  "QN2NYJATQR73WY3LUZCIGGXPCK4TARQOWAM4JPA7GOKHO56PFMBUJR7CU4",
  "ZS6ZOG2KSH4B6F6KOFX3XMYESFYHLFSE6KCLDUWHBYVG4RXITGJ5WZ2IEA",
  "L2YINV723SZOK7OSN6MCNC4L3KJ6Z2QUT4SJEW3B3G4V6S7JMFSTF3LEVA",
  "RMYDGLQWNUCLJOJLRDVSZNDEG2MDIPVDDKINKAMCSCVWFZ7ERBPYS3DM2M",
  "6YIVMCJZVGL4UGGAPQSKFMKCFJPVZQGWLTJYUUQD6CABOQDWALWYGQQJTM",
  "QTDHWMEFWP4FBTBGNGNMTNJUBXXE6UOQLALENWCWDHKUL2XOIWN5W774FQ",
  "57PEUGZEJBO67ZVGVG436ISYL5SFDSQ3KGRKT677X2JXOSJ3PZEYIGNDDY",
  "SJZULFKXVHC6BJGJBYBOOXI5CG3Z4EPPR36UBVVTWAQ535RIQZVCHXATLI",
  "IZXV3H22MVVCOG4RA66K3U6OJADNAIF2C35GROZM6C2HLYOLL2ZMK3FZUU",
  "GX3S5ARYVMFWBAJA3TSTBVQXVL7S43KYPRDBAZLE7PNVCBLGRI35JCR4U4",
  "VLTMBA5PXPBRJVTR67Q4YP7BV4KFORRJ7OJVMDXFULCTVPL4FHCSH5PRUE",
  "MMOSX2JGAAFRRPPQFZBR4BNCGJFQF4WKHI2JKB76DQZV7ZVIELRSBXR2ZQ",
  "RBC3JWCLTAIHRQZX3NSNZ6JVYXR3HFXBJ5YKR73GUZR3KMTCQRNP767MWY",
  "LC7SGS7XPXGYVSYNLTOJYGLUWHBBO6ELPKFZNBWYWGXA5HNPSHKJ5XMANM",
  "A2KXXX3JYBIWWUKHRVT3VYGGNZ7HNK73KIQCBFNQGNJYOPM63YBNAZA2SI",
  "PQWSPROGKBSBTNPEJRLXJ22NX265G67WOKW663WA5I7NGCB6BRAUKTVELI",
  "WX6VWFBPTEMR7KORLGHV5QJRXNL4F6ECONWRTMZLLEVUZWUHSFNLLMVOFY",
  "ILK2WBBNTN2H5BUIK5WYATFZ6TINTN4N3YJQMLF46INJPJMUUBFQKM6EVM",
  "I3OUODLMJPI6QNN244UWSXKUADNLGQRZS4BFX72Y54QNWVDYXZLKI6ZPSE",
  "JXH7QHVUW4E4ZL7HAYB5GAXSVEV6EDADUNO33RDNJY63QZP4JHD5KACC3A",
  "OBJ4CAWJVXUUEL64WIUE6APM7DS242VGQ7HYLH47O6RXVORNICVPRZLAFU",
  "P5YJQ5CRD57LKMTAFN6FJ6YLGNXF5V57RT765KTYL4HHYQAH4XJ7MOU65M",
  "OPEZYQIDTUBTYXCJZXQ3O5GCTNKKJVQSJ7H2VWMCACJUBOTHTMSA4KSRG4",
  "336BNPW7XFAM2GIYAJZ36AQAIXR5ZDYBLLHAAGDJX6J4F6TL4UI2R4MNVY",
  "MUGMYW4E4E3AANZVNPIGGSASDNXDFQFD3GGS6UYX6EKTLD7YCLPGDDGH5Q",
  "H5ZD63ZMVHKZ36XEKSRLENJ2LJBG4DDJKXH5KBRVQYINZ2URPEJTEPAL3M",
  "JSRR5A54TQ7R6BZN7B2B62JUNBVASJ6CWUBJ2OJ55NHWEP2PVLMX6OBTJ4",
  "YCOZ7EL5B6VHHNWDH4WMTICZ3W5E3F2QVZHR7CVX3Y4H7UZZZKQZFNTITU",
  "ZWH67EU256TMCCMZ5ZU74QWTHQ7S3Q6CJBOYTDHIYQKJOH4VQJ4IRNPWZA",
  "HOB6HQKQ3MOOFWUWWSYFUXX7XAY5X2RF2INHXXTN74MAO4XXVRGTKHYROU"
]


function checkFastros(asa, amount) {
  if (asas.ForumAstro.includes(asa)) {
    return amount
  }
  else {
    return 0
  }
}

function checkAastros(asa, amount, banning = false) {
  if (asas.AlgoAstro.includes(asa)) {
    if (!banning) {
      return amount
    }
    else {
      return 1
    }
  }
  else {
    return 0
  }
}

async function tvl() {

  let tvlStart = 4503659951508

  let addresses = txnAddresses

  let url = "https://algoindexer.algoexplorerapi.io"

  for (let i = 0; i < addresses.length; i++) {

    let appData = await fetch(url + '/v2/accounts/' + addresses[i])

    let appJSON = await appData.json()

    let reward = 0

    let HDL = 0
    let pAstro = 0
    let fAstro = 0
    let aAstro = 0
    let tinyHDLALGO = 0
    let algoFiHDLALGO = 0

    appJSON.account.assets.forEach(element => {
      let amount = element.amount

      switch (element["asset-id"]) {
        case asas.realHDL:
          HDL = amount
          break;
        case asas.PlatAstro:
          pAstro = amount
          break;
        case asas.tinyHDLALGO:
          tinyHDLALGO = amount
          break;
        case asas.algoFiHDLALGO:
          algoFiHDLALGO = amount
          break;
        default:
          fAstro += checkFastros(element["asset-id"], amount)
          aAstro += checkAastros(element["asset-id"], amount, true)
          break;
      }
    })

    let fakeHDLS = (tinyHDLALGO + algoFiHDLALGO) * 2
    HDL += fakeHDLS

    reward = parseInt(HDL + (pAstro * 0.05 * HDL) + (fAstro * 0.0025 * HDL) + (aAstro * 0.03 * HDL))

    let AppStates = await appJSON.account["apps-local-state"]

    if (AppStates !== undefined) {
      AppStates.forEach(async (state) => {
        if (state.id === parseInt(appIndex)) {
          let optedIn = true
          let rAmount = 0
          let banned = false
          let keyvalues = state["key-value"]
          if (keyvalues !== undefined) {
            keyvalues.forEach(entry => {
              switch (entry.key) {
                case "YmFubmVk":
                  if (entry.value.uint === 1) { banned = true }
                  break;
                case "dkhETA==":
                  rAmount = entry.value.uint
                  break;
                default:
                  break;
              }
            })
          }

          let minWiggle = rAmount - (rAmount * 0.1)


          if (optedIn !== undefined) {
            if ((HDL < 2000000000 || pAstro === 0 || reward < minWiggle) && !banned) {
              console.log("Detected that user should be banned: " + addresses[i] + " Staked: " + rAmount + " Balance: " + " HDL: " + HDL + " pAstro: " + pAstro + " aAstro: " + aAstro + " fAstro: " + fAstro )
            }
            else {
              if (banned) {
                console.log("Detected banned user: " + addresses[i])
                tvlStart -= rAmount
              }
            }
          }
        }
      })
    }
  }
  return (tvlStart + vaultHDL) / 1000000
}

async function getHDLValue(){

  const poolAddress = "ALPWZJB6DRFNZIMP4SG44V27Z2YNKJ4DNEWVQ2HZ4JJBE4SUTVMTL4X35Q"

  let usdc = 31566704

  let url = "https://algoindexer.algoexplorerapi.io"

  let appData = await fetch(url + '/v2/accounts/' + poolAddress)

  let appJSON = await appData.json()

  let obj = {data:appJSON}


  appJSON.account.assets.forEach(element => {
      let amount = element.amount

      switch (element["asset-id"]) {
          case asas.realHDL:
              obj.hAmount = amount
              break;
          case usdc:
              obj.uAmount = amount
              break;
          default:
              break;
      }
  })

  return obj.uAmount / obj.hAmount
}

//exampe usage

//tvl().then(data => console.log(data))
//getHDLValue().then(data => console.log(data))

module.exports = {
  algorand: {
    tvl,
    getHDLValue
  }
}
